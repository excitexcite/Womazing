/// <li class="dropdown">
/// <button
/// 		type="button"
/// 		class="dropdown__title"
/// 		aria-expanded="false"
/// 		aria-controls=""
/// 	>
///
/// 	</button>
/// 	<ul class="dropdown__menu" id="">
/// 		<li class="dropdown__menu-item">
/// 			<a class="dropdown__menu-link" href="#"></a>
/// 		</li>
/// 	</ul>
/// </li>

.dropdown {
	@include mqm(768) {
		position: relative;

		&:after {
			content: "";
			border: 1rem solid transparent;
			border-bottom: 0.5rem solid $grey-line;
			position: absolute;
			left: 50%;
			transform: translateX(-50%);
			transition: $transition;
			opacity: 0;
			will-change: opacity;
			pointer-events: none;
		}

		&:hover,
		&:focus-within {
			.dropdown__menu {
				opacity: 1;
				transform: rotateX(0) translateX(-50%);
				visibility: visible;
			}

			.dropdown__menu .dropdown__menu-link {
				opacity: 1;
			}

			&:after {
				opacity: 1;
				pointer-events: revert;
			}
		}
	}
}

.dropdown__menu {
	@include mqm(768) {
		position: absolute;
		min-width: max-content;
		left: 50%;
		top: calc(100% + 1.25rem);
		transition: $transition;
		transform: rotateX(-90deg) translateX(-50%);
		transform-origin: top center;
		visibility: hidden;
		opacity: 0.3;
		background-color: $grey-line;
		border-radius: 12px;
		box-shadow: $dropdownBoxShadow;

		/// trick to keep dropdown menu open while curson is on the space
		/// (actyally not the space but "::before") between navigation list
		/// item and dropdown menu
		/// top and height need to be adjusted for required space
		&:before {
			content: "";
			width: 100%;
			position: absolute;
			// top: -1.25rem;
			// height: 1.25rem;
			background-color: transparent;
		}
	}
}

.dropdown__title {
	display: inline-flex;
	align-items: center;
	cursor: pointer;

	&:after {
		content: "";
		border: 0.35rem solid transparent;
		border-top-color: $grey-text;
		margin-left: 0.25em;
		transform: translateY(0.25em);
	}
}

.dropdown__menu-item {
}

.dropdown__menu-link {
	@include mqm(768) {
		display: block;
		font-size: rem(16);
		line-height: math.div(22, 16);
		opacity: 0;
		transition: $transition;
	}
}

/// <input type="checkbox" class="read-more-checker"
/// id="read-more-checker">
/// <div class="limiter">
/// All content is here
/// </div>
/// <div class="overflow-hidder"></div>
/// <label for="read-more-checker"
/// class="read-more-button"></label>

.limiter {
	max-height: rem(170);
	overflow: hidden;
	position: relative;

	@include mqm(600) {
		max-height: rem(400);
	}
}

.overflow-hidder {
	position: absolute;
	bottom: 0;
	background: linear-gradient(
		to bottom,
		rgba($clr-background, 0) 0%,
		rgba($clr-background, 1) 90%
	);
	max-width: rem($maxWidthContainer);
	width: 100%;
	height: rem(250);
	opacity: 1;
	transition: 300ms;
}

.read-more-checker {
	opacity: 0;
	position: absolute;
}

.read-more-checker:checked ~ .limiter {
	max-height: none;
}

.read-more-checker:checked ~ .limiter .overflow-hidder {
	opacity: 0;
	transition: 300ms;
}

.read-more-checker ~ .read-more-button::after {
	content: "Подробнее";
}

.read-more-checker:checked ~ .read-more-button::after {
	content: "Свернуть";
}

/// radio button

.radio-button {
	width: rem(16);
	height: rem(16);
	border-radius: 50%;
	border: 1px solid $grey-text;
	vertical-align: middle;
	order: -1;
	cursor: pointer;

	&::before {
		display: block;
		content: "";
		width: rem(8);
		height: rem(8);
		border-radius: 50%;
		background-color: $primary;
		transform-origin: center;
		transform: translate(40%, 40%) scale(0);
		transform: scale(0);
		transition: transform 300ms ease-in;
	}

	&:checked {
		border-color: $primary;
	}

	&:checked::before {
		transform: scale(1);
	}

	&:focus {
		outline: none;
	}
}

/// <div class="select-wrapper">
/// 	<select class="select-element">
/// 		<option value="first"></option>
/// 	</select>
/// 	<svg
/// 		class="select-arrow"
/// 		width="32"
/// 		height="32"
/// 		viewBox="0 0 32 32"
/// 		aria-hidden="true"
/// 	></svg>
/// </div>

/// SELECT WITH CUSTOM ARROW
/// USE FOLLOWING STUCTURE AND STYLES BASE

.select-wrapper {
	position: relative;
}

.select-element {
	min-height: inherit;
	background-color: transparent;
	cursor: pointer;

	&:focus {
		// outline: 1px solid $primary;
		// background-color: $clr-black;
		// color: $primary;
	}
}

.select-arrow {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	pointer-events: none;
}

/// <div class="menu-blured-bg">
/// 	<div class="menu-wrapper">
/// 		<div class="menu-content">
/// 		</div>
/// 	</div>
/// </div>
///
/// Side (bottom) menu with blured color baackground

.menu-blured-bg {
	position: fixed;
	bottom: 0;
	opacity: 0;
	width: 100%;
	height: 100%;
	overflow-x: hidden;
	z-index: 10;
	background-color: rgba(25, 25, 25, 0.25);
	backdrop-filter: blur(10px);
	visibility: hidden;
	transition: opacity 300ms ease-in-out 0ms;

	&--active {
		visibility: visible;
		opacity: 1;
	}
}

.menu-wrapper {
	position: fixed;
	top: 60px;
	width: 100%;
	visibility: hidden;
	transform: translateY(1000%);
	transition: transform 300ms ease-in-out 0ms, visibility 300ms ease-in-out 0ms;

	&--active {
		visibility: visible;
		transform: translateY(0);
	}

	@include mqm(500) {
		width: auto;
		height: 100%;

		top: 0;
		right: 0;
		transform: translateY(0);
		transform: translateX(100%);

		&--active {
			transform: translateX(0);
		}
	}
}

.menu-content {
	position: relative;
	height: 100%;
	overflow-x: hidden;
	background-color: $clr-white;
	border-top: 1px solid $grey-line;
	border-top-right-radius: 16px;
	border-top-left-radius: 16px;

	@include mqm(500) {
		padding-bottom: 0;
		border-top: 0px;
		border-top-right-radius: 0;
		border-top-left-radius: 0;
	}
}
